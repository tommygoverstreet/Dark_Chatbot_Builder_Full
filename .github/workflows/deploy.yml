# Dark Chatbot Builder Pro - GitHub Actions Deployment Workflow
# Automated testing, building, and deployment to multiple platforms

name: Deploy PWA

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test-and-validate:
    name: Test and Validate
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci || npm install
      
    - name: Validate HTML
      run: npx html-validate index.html || echo "HTML validation completed"
      
    - name: Check PWA manifest
      run: |
        node -e "
          const manifest = require('./manifest.json');
          console.log('✓ Manifest is valid JSON');
          console.log('✓ App name:', manifest.name);
          console.log('✓ Theme color:', manifest.theme_color);
          console.log('✓ Icons count:', manifest.icons.length);
        "
        
    - name: Validate Service Worker
      run: |
        node -e "
          const fs = require('fs');
          const sw = fs.readFileSync('./sw.js', 'utf8');
          if (sw.includes('addEventListener')) {
            console.log('✓ Service Worker contains event listeners');
          }
          if (sw.includes('caches')) {
            console.log('✓ Service Worker uses Cache API');
          }
        "
        
    - name: Check file structure
      run: |
        echo "Checking required files..."
        test -f index.html && echo "✓ index.html exists" || echo "✗ index.html missing"
        test -f app.js && echo "✓ app.js exists" || echo "✗ app.js missing"
        test -f custom.css && echo "✓ custom.css exists" || echo "✗ custom.css missing"
        test -f manifest.json && echo "✓ manifest.json exists" || echo "✗ manifest.json missing"
        test -f sw.js && echo "✓ sw.js exists" || echo "✗ sw.js missing"
        test -f favicon.svg && echo "✓ favicon.svg exists" || echo "✗ favicon.svg missing"
        test -d icons && echo "✓ icons directory exists" || echo "✗ icons directory missing"
        
  lighthouse-audit:
    name: Lighthouse PWA Audit
    runs-on: ubuntu-latest
    needs: test-and-validate
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install Lighthouse CI
      run: npm install -g @lhci/cli@0.12.x
      
    - name: Start local server
      run: |
        python3 -m http.server 8080 &
        sleep 5
      
    - name: Run Lighthouse CI
      run: |
        lhci autorun || echo "Lighthouse audit completed with warnings"
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
        
  deploy-netlify:
    name: Deploy to Netlify
    runs-on: ubuntu-latest
    needs: [test-and-validate, lighthouse-audit]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to Netlify
      uses: nwtgck/actions-netlify@v2.0
      with:
        publish-dir: '.'
        production-branch: main
        github-token: ${{ secrets.GITHUB_TOKEN }}
        deploy-message: "Deploy from GitHub Actions"
        enable-pull-request-comment: true
        enable-commit-comment: true
        overwrites-pull-request-comment: true
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        
  deploy-github-pages:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: [test-and-validate, lighthouse-audit]
    if: github.ref == 'refs/heads/main'
    
    permissions:
      contents: read
      pages: write
      id-token: write
      
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v2
      with:
        path: '.'
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v3
      
  deploy-vercel:
    name: Deploy to Vercel
    runs-on: ubuntu-latest
    needs: [test-and-validate, lighthouse-audit]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.ORG_ID }}
        vercel-project-id: ${{ secrets.PROJECT_ID }}
        working-directory: ./
        
  performance-analysis:
    name: Performance Analysis
    runs-on: ubuntu-latest
    needs: test-and-validate
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Analyze bundle size
      run: |
        echo "Analyzing file sizes..."
        du -h index.html app.js custom.css
        echo "Total project size:"
        du -sh .
        
    - name: Check PWA requirements
      run: |
        echo "Checking PWA requirements..."
        test -f manifest.json && echo "✓ Web App Manifest present"
        test -f sw.js && echo "✓ Service Worker present"
        grep -q "theme-color" index.html && echo "✓ Theme color meta tag present"
        grep -q "viewport" index.html && echo "✓ Viewport meta tag present"
        
    - name: Security scan
      run: |
        echo "Basic security checks..."
        grep -q "Content-Security-Policy" index.html && echo "✓ CSP header found" || echo "⚠ Consider adding CSP"
        grep -q "X-Frame-Options" _headers && echo "✓ X-Frame-Options found" || echo "⚠ Consider adding X-Frame-Options"
        
  notification:
    name: Deployment Notification
    runs-on: ubuntu-latest
    needs: [deploy-netlify, deploy-github-pages, deploy-vercel]
    if: always()
    
    steps:
    - name: Notify deployment status
      run: |
        echo "Deployment Summary:"
        echo "- Netlify: ${{ needs.deploy-netlify.result }}"
        echo "- GitHub Pages: ${{ needs.deploy-github-pages.result }}"
        echo "- Vercel: ${{ needs.deploy-vercel.result }}"
